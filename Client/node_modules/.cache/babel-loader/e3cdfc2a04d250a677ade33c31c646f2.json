{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Menu from \"./menu\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginRight: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginRight: drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  }\n}));\nexport default function SideBar() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  }; // return (\n  //   <div className={classes.root}>\n  //     <CssBaseline />\n  //     <AppBar\n  //       position=\"fixed\"\n  //       className={clsx(classes.appBar, {\n  //         [classes.appBarShift]: open,\n  //       })}\n  //     >\n  //       <Toolbar style={{ marginLeft: \"auto\", marginRight: \"0\" }}>\n  //         <Typography variant=\"h6\" noWrap>\n  //           ניהול הדירות שלי\n  //         </Typography>\n  //         <IconButton\n  //           color=\"inherit\"\n  //           aria-label=\"open drawer\"\n  //           edge=\"end\"\n  //           onClick={handleDrawerOpen}\n  //           className={clsx(open && classes.hide)}\n  //         >\n  //           <MenuIcon />\n  //         </IconButton>\n  //       </Toolbar>\n  //     </AppBar>\n  //     <Drawer\n  //       className={classes.drawer}\n  //       variant=\"persistent\"\n  //       anchor=\"right\"\n  //       open={open}\n  //       classes={{\n  //         paper: classes.drawerPaper,\n  //       }}\n  //     >\n  //       <div className={classes.drawerHeader}>\n  //         <h2\n  //           style={{\n  //             marginRight: \"20px\",\n  //             marginTop: \"10px\",\n  //           }}\n  //         >\n  //           תפריט\n  //         </h2>\n  //         <IconButton onClick={handleDrawerClose}>\n  //           {theme.direction === \"ltr\" ? (\n  //             <ChevronLeftIcon />\n  //           ) : (\n  //             <ChevronRightIcon />\n  //           )}\n  //         </IconButton>\n  //       </div>\n  //       <Divider />\n  //       <List>\n  //         <Menu />\n  //       </List>\n  //       <Divider />\n  //     </Drawer>\n  //     <main\n  //       className={clsx(classes.content, {\n  //         [classes.contentShift]: open,\n  //       })}\n  //     >\n  //       <div className={classes.drawerHeader} />\n  //     </main>\n  //   </div>\n  // );\n\n}\n\n_s(SideBar, \"Adchr2xZCpHvRdMq2Jjo+bPE43s=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/omerperez/My Projects/My Ideas/Omer Perez CV/Client/src/components/SideBar.jsx"],"names":["React","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","Menu","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginRight","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","flexGrow","contentShift","SideBar","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Menu from \"./menu\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginRight: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // return (\n  //   <div className={classes.root}>\n  //     <CssBaseline />\n  //     <AppBar\n  //       position=\"fixed\"\n  //       className={clsx(classes.appBar, {\n  //         [classes.appBarShift]: open,\n  //       })}\n  //     >\n  //       <Toolbar style={{ marginLeft: \"auto\", marginRight: \"0\" }}>\n  //         <Typography variant=\"h6\" noWrap>\n  //           ניהול הדירות שלי\n  //         </Typography>\n  //         <IconButton\n  //           color=\"inherit\"\n  //           aria-label=\"open drawer\"\n  //           edge=\"end\"\n  //           onClick={handleDrawerOpen}\n  //           className={clsx(open && classes.hide)}\n  //         >\n  //           <MenuIcon />\n  //         </IconButton>\n  //       </Toolbar>\n  //     </AppBar>\n  //     <Drawer\n  //       className={classes.drawer}\n  //       variant=\"persistent\"\n  //       anchor=\"right\"\n  //       open={open}\n  //       classes={{\n  //         paper: classes.drawerPaper,\n  //       }}\n  //     >\n  //       <div className={classes.drawerHeader}>\n  //         <h2\n  //           style={{\n  //             marginRight: \"20px\",\n  //             marginTop: \"10px\",\n  //           }}\n  //         >\n  //           תפריט\n  //         </h2>\n  //         <IconButton onClick={handleDrawerClose}>\n  //           {theme.direction === \"ltr\" ? (\n  //             <ChevronLeftIcon />\n  //           ) : (\n  //             <ChevronRightIcon />\n  //           )}\n  //         </IconButton>\n  //       </div>\n  //       <Divider />\n  //       <List>\n  //         <Menu />\n  //       </List>\n  //       <Divider />\n  //     </Drawer>\n  //     <main\n  //       className={clsx(classes.content, {\n  //         [classes.contentShift]: open,\n  //       })}\n  //     >\n  //       <div className={classes.drawerHeader} />\n  //     </main>\n  //   </div>\n  // );\n}\n"]},"metadata":{},"sourceType":"module"}